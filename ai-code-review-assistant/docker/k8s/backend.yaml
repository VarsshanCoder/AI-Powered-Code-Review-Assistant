apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: ai-code-review
type: Opaque
data:
  JWT_SECRET: eW91ci1zdXBlci1zZWNyZXQtand0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg==
  OPENAI_API_KEY: ""  # Add your base64 encoded OpenAI API key
  HUGGINGFACE_API_KEY: ""  # Add your base64 encoded Hugging Face API key
  GITHUB_CLIENT_ID: ""  # Add your base64 encoded GitHub client ID
  GITHUB_CLIENT_SECRET: ""  # Add your base64 encoded GitHub client secret
  GITHUB_WEBHOOK_SECRET: ""  # Add your base64 encoded GitHub webhook secret

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: ai-code-review
data:
  NODE_ENV: "production"
  PORT: "3001"
  DATABASE_URL: "postgresql://postgres:postgres@postgres-service:5432/ai_code_review"
  REDIS_URL: "redis://redis-service:6379"
  LOG_LEVEL: "info"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-uploads-pvc
  namespace: ai-code-review
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ai-code-review
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ai-code-review-backend:latest
        ports:
        - containerPort: 3001
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secret
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        - name: logs-storage
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: backend-uploads-pvc
      - name: logs-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: ai-code-review
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: ai-code-review
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80